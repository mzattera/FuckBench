;
; File generated by cc65 v 2.17 - Git 5848444
;
	.fopt		compiler,"cc65 v 2.17 - Git 5848444"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_gets
	.import		_putchar
	.export		_C
	.export		_K
	.export		_X
	.export		_Y
	.export		_c
	.export		_b
	.export		_D
	.export		_main

.segment	"DATA"

_C:
	.word	$031F
_K:
	.word	$0008
_b:
	.byte	$56,$53,$55,$57,$54,$55,$53,$56,$00
	.res	119,$00

.segment	"RODATA"

L0021:
	.byte	$30,$31,$2F,$40,$41,$50,$40,$41,$42,$50,$4F,$51,$40,$4E,$52,$5F
	.byte	$61,$40,$00
L00B2:
	.byte	$2E,$3F,$2B,$6E,$6B,$62,$72,$71,$3F,$2A,$3F,$4E,$4B,$42,$52,$51
	.byte	$00
L0039:
	.byte	$20,$21,$21,$23,$7E,$23,$25,$29,$00
L0012:
	.byte	$2E,$48,$3F,$4C,$46,$49,$43,$46,$00

.segment	"BSS"

_X:
	.res	2,$00
_Y:
	.res	2,$00
_c:
	.res	9,$00

; ---------------------------------------------------------------
; int __near__ D (int, int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_D: near

.segment	"CODE"

	jsr     pushax
	jsr     push0
	ldy     #$0C
	jsr     subysp
	lda     _C
	ldx     _C+1
	jsr     negax
	jsr     pushax
	jsr     decsp2
L0009:	lda     #<(_b)
	ldy     #$10
	clc
	adc     (sp),y
	sta     ptr1
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	ldx     #$00
	ldy     #$08
	jsr     staxysp
	sta     ptr1
	ldy     #$16
	lda     (sp),y
	and     ptr1
	pha
	pla
	jeq     L0018
	ldy     #$08
	lda     (sp),y
	and     #$07
	ldy     #$06
	jsr     staxysp
	ldy     #$0A
	jsr     staxysp
	sta     ptr1
	txa
	clc
	adc     #>(L0012)
	sta     ptr1+1
	ldy     #<(L0012)
	lda     (ptr1),y
	ldy     #$40
	jsr     decaxy
	ldy     #$0E
	jsr     staxysp
	jmp     L0026
L0017:	ldy     #$11
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
L0025:	ldy     #$07
	jsr     ldaxysp
	ldy     #$04
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #>(_b)
	sta     ptr1+1
	ldy     #<(_b)
	lda     (ptr1),y
	ldx     #$00
	ldy     #$0C
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	cpx     #$00
	bne     L002F
	cmp     #$07
L002F:	jsr     booleq
	sta     ptr1
	stx     ptr1+1
	ldy     #$15
	jsr     ldaxysp
	jsr     bnegax
	ora     ptr1
	pha
	txa
	ora     ptr1+1
	sta     tmp1
	pla
	ora     tmp1
	beq     L0030
	ldy     #$0F
	lda     (sp),y
	bne     L0030
	dey
	lda     (sp),y
	cmp     #$08
	jeq     L0026
L0030:	ldy     #$06
	lda     (sp),y
	and     #$07
	jsr     bnega
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	jsr     bnegax
	jsr     tossubax
	sta     ptr1
	stx     ptr1+1
	ldy     #$0B
	jsr     ldaxysp
	cmp     #$03
	txa
	sbc     #$00
	bvc     L0033
	eor     #$80
L0033:	asl     a
	lda     #$00
	rol     a
	and     ptr1
	pha
	lda     #$00
	and     ptr1+1
	tax
	pla
	jsr     pushax
	ldy     #$19
	jsr     ldaxysp
	ldy     #$0E
	and     (sp),y
	pha
	txa
	iny
	and     (sp),y
	tax
	pla
	jsr     tosorax
	stx     tmp1
	ora     tmp1
	jne     L0026
	ldy     #$04
	lda     (sp),y
	and     #$88
	jne     L0026
	ldy     #$17
	jsr     ldaxysp
	ldy     #$0C
	and     (sp),y
	pha
	txa
	iny
	and     (sp),y
	sta     tmp1
	pla
	ora     tmp1
	beq     L00D0
	ldx     #$00
	lda     #$01
	jmp     L003A
L00D0:	dey
	lda     (sp),y
	and     #$07
	sta     ptr1
	lda     #$00
	clc
	adc     #>(L0039)
	sta     ptr1+1
	ldy     #<(L0039)
	ldx     #$00
	lda     (ptr1),y
	ldy     #$20
	jsr     decaxy
L003A:	jsr     stax0sp
	ldy     #$13
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L003D
	jsr     ldax0sp
	cmp     #$40
	txa
	sbc     #$00
	bvc     L0040
	eor     #$80
L0040:	jpl     L003D
	lda     #<(_b)
	ldy     #$10
	clc
	adc     (sp),y
	sta     ptr1
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     #<(_b)
	ldy     #$04
	clc
	adc     (sp),y
	sta     ptr1
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$08
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldy     #$0B
	jsr     ldaxysp
	cmp     #$03
	txa
	sbc     #$00
	bvc     L004A
	eor     #$80
L004A:	asl     a
	ldx     #$00
	bcc     L00D6
	ldy     #$07
	jsr     ldaxysp
	clc
	ldy     #$04
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	pla
	clc
	adc     #$01
	and     #$80
	beq     L00DC
	lda     #<(_b)
	dey
	clc
	adc     (sp),y
	sta     sreg
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     sreg+1
	ldx     #$00
	lda     _c+4
	and     _c
	pha
	pla
	beq     L00D5
	lda     _c+4
	jmp     L0055
L00D5:	lda     #$37
L0055:	ldy     #$30
	jsr     decaxy
	sta     ptr1
	stx     ptr1+1
	ldy     #$17
	jsr     ldaxysp
	ora     ptr1
	pha
	txa
	ora     ptr1+1
	pla
	ldy     #$00
	sta     (sreg),y
	ldx     #$00
	lda     #$09
	jsr     addeq0sp
L00DC:	ldx     #$00
L00D6:	lda     #$18
	sec
	ldy     #$16
	sbc     (sp),y
	pha
	txa
	iny
	sbc     (sp),y
	tax
	pla
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$17
	jsr     ldaxysp
	jsr     decax1
	jsr     _D
	jsr     subeq0sp
	ldy     #$14
	lda     (sp),y
	and     #$01
	sta     ptr1
	jsr     ldax0sp
	cmp     #$C1
	txa
	sbc     #$FF
	bvs     L0060
	eor     #$80
L0060:	asl     a
	lda     #$00
	rol     a
	and     ptr1
	jsr     pusha0
	ldy     #$13
	jsr     ldaxysp
	cpx     _X+1
	bne     L00CD
	cmp     _X
L00CD:	jsr     booleq
	jsr     tosanda0
	jsr     pusha0
	ldy     #$07
	jsr     ldaxysp
	cpx     _Y+1
	bne     L00CE
	cmp     _Y
L00CE:	jsr     booleq
	jsr     tosanda0
	cmp     #$00
	beq     L005E
	ldy     #$0F
	lda     (sp),y
	bne     L00D7
	dey
	lda     (sp),y
	cmp     #$08
	bne     L00D7
	ldy     #$07
	jsr     ldaxysp
	jsr     asrax2
	eor     #$01
	clc
	ldy     #$04
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	clc
	adc     #<(_b)
	sta     ptr1
	txa
	adc     #>(_b)
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	ldy     #$07
	jsr     pushwysp
	ldy     #$09
	jsr     ldaxysp
	jsr     asrax1
	jsr     tossubax
	clc
	adc     #<(_b)
	sta     ptr1
	txa
	adc     #>(_b)
	sta     ptr1+1
	ldy     #$16
	lda     (sp),y
	ora     #$06
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
L00D7:	lda     #$00
	jmp     L0006
L005E:	lda     #<(_b)
	ldy     #$10
	clc
	adc     (sp),y
	sta     ptr1
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$08
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	lda     #<(_b)
	ldy     #$04
	clc
	adc     (sp),y
	sta     ptr1
	lda     #>(_b)
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$0C
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
L003D:	jsr     pushw0sp
	ldy     #$05
	jsr     ldaxysp
	jsr     tosicmp
	bmi     L0076
	beq     L0076
	jsr     ldax0sp
	ldy     #$02
	jsr     staxysp
	ldy     #$13
	jsr     ldaxysp
	cmp     #$05
	txa
	sbc     #$00
	bvs     L0078
	eor     #$80
L0078:	bpl     L0076
	ldy     #$11
	jsr     ldaxysp
	sta     _X
	stx     _X+1
	ldy     #$05
	jsr     ldaxysp
	sta     _Y
	stx     _Y+1
L0076:	ldy     #$0B
	jsr     ldaxysp
	cmp     #$05
	txa
	sbc     #$00
	bvc     L007F
	eor     #$80
L007F:	asl     a
	lda     #$00
	tax
	rol     a
	ldy     #$0C
	jsr     addeqysp
	ldy     #$14
	lda     (sp),y
	and     #$01
	beq     L0080
	ldy     #$04
	lda     (sp),y
	and     #$70
	jsr     pusha0
	ldy     #$19
	jsr     ldaxysp
	jsr     mulax6
	jsr     tosaddax
	cpx     #$00
	bne     L0084
	cmp     #$80
L0084:	jsr     booleq
	sta     ptr1
	ldy     #$0B
	jsr     ldaxysp
	cmp     #$03
	txa
	sbc     #$00
	bvc     L0085
	eor     #$80
L0085:	asl     a
	lda     #$00
	rol     a
	and     ptr1
	pha
	pla
	beq     L0080
	ldy     #$0D
	jsr     ldaxysp
	jsr     decax1
	ldy     #$0C
	jsr     staxysp
L0080:	ldy     #$0D
	lda     (sp),y
	dey
	ora     (sp),y
	jeq     L0025
L0026:	ldy     #$0B
	jsr     ldaxysp
	cmp     #$03
	txa
	sbc     #$00
	bvs     L001C
	eor     #$80
L001C:	asl     a
	lda     #$00
	rol     a
	jsr     pusha0
	ldy     #$09
	jsr     ldaxysp
	cpx     #$80
	lda     #$00
	rol     a
	jsr     tosanda0
	cmp     #$00
	beq     L00DB
	ldy     #$07
	jsr     ldaxysp
	jsr     negax
	jmp     L001F
L00DB:	lda     #$40
	jsr     pusha0
	ldy     #$10
	lda     #$01
	jsr     addeqysp
	sta     ptr1
	txa
	clc
	adc     #>(L0021)
	sta     ptr1+1
	ldy     #<(L0021)
	lda     (ptr1),y
	jsr     tossuba0
L001F:	ldy     #$06
	jsr     staxysp
	stx     tmp1
	ora     tmp1
	jne     L0017
L0018:	ldy     #$11
	jsr     ldaxysp
	ldy     #$09
	jsr     incaxy
	ldx     #$00
	and     #$77
	ldy     #$10
	jsr     staxysp
	cmp     #$00
	jne     L0009
	ldy     #$03
	jsr     ldaxysp
L0006:	ldy     #$18
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldx     #$00
	lda     #$08
	sta     _X
	stx     _X+1
	jmp     L0091
L008F:	lda     _X
	ldx     _X+1
	ldy     #$70
	jsr     incaxy
	clc
	adc     #<(_b)
	tay
	txa
	adc     #>(_b)
	tax
	tya
	jsr     pushax
	lda     #<(_b)
	clc
	adc     _X
	sta     ptr1
	lda     #>(_b)
	adc     _X+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sec
	sbc     #$40
	sta     (ptr1),y
	sec
	sbc     #$08
	jsr     staspidx
	lda     _X
	ldx     _X+1
	ldy     #$10
	jsr     incaxy
	clc
	adc     #<(_b)
	sta     ptr1
	txa
	adc     #>(_b)
	sta     ptr1+1
	lda     #$12
	ldy     #$00
	sta     (ptr1),y
	lda     _X
	ldx     _X+1
	ldy     #$60
	jsr     incaxy
	clc
	adc     #<(_b)
	sta     ptr1
	txa
	adc     #>(_b)
	sta     ptr1+1
	lda     #$09
	ldy     #$00
	sta     (ptr1),y
L0091:	lda     _X
	ldx     _X+1
	sta     regsave
	stx     regsave+1
	jsr     decax1
	sta     _X
	stx     _X+1
	lda     regsave
	ora     regsave+1
	jne     L008F
L009F:	ldx     #$00
	lda     #$80
	sta     _X
	stx     _X+1
	jmp     L00A7
L00A5:	lda     _X
	and     #$08
	beq     L00B0
	lda     _X
	sec
	sbc     #$07
	sta     _X
	bcs     L00AE
	dec     _X+1
	ora     _X+1
L00AE:	beq     L00B0
	ldx     #$00
	lda     #$0A
	jmp     L00B3
L00B0:	lda     #<(_b)
	sta     ptr1
	lda     #>(_b)
	clc
	adc     _X+1
	sta     ptr1+1
	ldy     _X
	lda     (ptr1),y
	and     #$0F
	sta     ptr1
	lda     #$00
	clc
	adc     #>(L00B2)
	sta     ptr1+1
	ldy     #<(L00B2)
	lda     (ptr1),y
	ldx     #$00
L00B3:	jsr     _putchar
L00A7:	lda     _X
	ldx     _X+1
	sta     regsave
	stx     regsave+1
	jsr     decax1
	sta     _X
	stx     _X+1
	lda     regsave
	ora     regsave+1
	bne     L00A5
	lda     #<(_c)
	ldx     #>(_c)
	jsr     _gets
	lda     _c
	jsr     pusha0
	lda     _c+1
	jsr     shlax4
	jsr     tossubax
	clc
	adc     _C
	sta     _X
	txa
	adc     _C+1
	sta     _X+1
	lda     _c+2
	jsr     pusha0
	lda     _c+3
	jsr     shlax4
	jsr     tossubax
	clc
	adc     _C
	sta     _Y
	txa
	adc     _C+1
	sta     _Y+1
	lda     _c
	bne     L00C0
	lda     _K
	ldx     _K+1
	jsr     pushax
	jsr     push0
	lda     #$05
	jsr     _D
L00C0:	lda     _K
	ldx     _K+1
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _D
	stx     tmp1
	ora     tmp1
	jne     L009F
	lda     _K
	ldx     _K+1
	eor     #$18
	sta     _K
	stx     _K+1
	jmp     L009F

.endproc

