The whole input and output hierarchy should be checked that does not create buffers that are not needed.

Checked: 
AutoCloseable
BufferedInputStream
BufferedOutputStream
Closeable
FilteredInputStream
FilteredOutputStream
InputStream
InputStreamReader
OutputStream
PrintStream
Reader


*** FIXES TO b2fJ ****************************************************************************************************************************************

>>> Port to FB


** Next in FuckBench *************************************************************************************************************************************

FB_java.bat uses a workaround that fixes issues with cc65 and spaces in path; maybe we can use same approach in FB_cl?
If this is possible, we can then use the cc65 redistributed with b2fj instead of having to install it
have FB_Java.bat to use loop instead compiling files one by one, maybe linker can use *.o; if so, update b2fJ as well.

Downgrade to Java 8? Update README.md accordingly

Put Python under redistr? Maybe use https://www.jython.org (needs Java 8) will simplify batch files

Batch to auto rebuild Java tools



SET LOCAL

SHR (?)

remove #dim _mf_c0 _mf_c1 _mf_c2 _mf_c3

Bitwise functions clear workarea; do it effciently (clear the minimum required in BF directly) 
-> Hint isolate the brainfuck code for each function in the C code, replace acces to m[] with functions to track which cell is accessed.
-> replace clean_tape with required [-]>

is mod X 255 faster than AND X 255? -> check similar stuff.

Move time libraries from C to ASM (there are examples in libsrc)

test\c\timetest.c non funziona se cambi CLOCKS_SEC



Diagram to show compilation process for several languages.



Example for ASM & C & Java (chess? adventure? hunt the wumpus? something recursive?)

Separate emu compile batch that automatically switches on or off checks for loops or have 2 version of compiler one w. check disabled and batch files can choose which to use.





Can we move b2fJ to Java 15 removing dependency on 1.8?

****** INSTRUCION COUNT  **************************

* 6502 functional test	: 26'764'008
* fib(15)				: 350'198